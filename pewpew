#include <Adafruit_NeoPixel.h>
#include <Adafruit_CircuitPlayground.h>
#ifdef __AVR__
#include <avr/power.h> // Required for 16 MHz Adafruit Trinket
#endif
float value;
uint8_t pixeln = 0;
// Which pin on the Arduino is connected to the NeoPixels?
// On a Trinket or Gemma we suggest changing this to 1:
#define LED_PIN     6
#define LED_COUNT  30
#define BRIGHTNESS 50
Adafruit_NeoPixel strip(LED_COUNT, LED_PIN, NEO_GRB + NEO_KHZ800);

void setup() {
#if defined(__AVR_ATtiny85__) && (F_CPU == 16000000)
  clock_prescale_set(clock_div_1);
#endif
  Serial.begin(9600);
  CircuitPlayground.begin();
  strip.begin();           // INITIALIZE NeoPixel strip object 
  strip.show();            // Turn OFF all pixels ASAP
  strip.setBrightness(BRIGHTNESS);
}
uint32_t Wheel(byte WheelPos) { //setting variable
  if (WheelPos < 85) {
    return strip.Color(WheelPos * 3, 255 - WheelPos * 3, 0);
  } else if (WheelPos < 170) {
    WheelPos -= 85;
    return strip.Color(255 - WheelPos * 3, 0, WheelPos * 3);
  } else {
    WheelPos -= 170;
    return strip.Color(0, WheelPos * 3, 255 - WheelPos * 3);
  }
}
void rainbow(uint8_t wait) { //setting variable
  uint16_t i, j;

  for (j = 0; j < 256; j++) {
    for (i = 0; i < strip.numPixels(); i++) {
      strip.setPixelColor(i, Wheel((i + j) & 255));
    }
    strip.show();
    delay(wait);
  }
}
void theaterChase(uint32_t c, uint8_t wait) {
  for (int j=0; j<10; j++) {  //do 10 cycles of chasing
    for (int q=0; q < 3; q++) {
      for (int i=0; i < strip.numPixels(); i=i+3) {
        strip.setPixelColor(i+q, c);    //turn every third pixel on
      }
      strip.show();
     
      delay(wait);
     
      for (int i=0; i < strip.numPixels(); i=i+3) {
        strip.setPixelColor(i+q, 0);        //turn every third pixel off
      }
    }
  }
}

void loop() {
  //sound
  value = CircuitPlayground.mic.soundPressureLevel(100); //evaluate sound pressure level
  Serial.print("Sound Sensor SPL: ");
  Serial.println(value); //allows us to see the sound pressure level the circuit playground measures
  if (value > 80) {//if the sound pressure level is over 80
    rainbow(20); //set pixel colour to rainbow
    delay(100);

  }
  else if (value > 60) {// if the sound pressure level is 61-80
    theaterChase(strip.Color(22, 97, 195), 200); // show blue
    delay(100);     //  Pause for a moment
    strip.show();
  }

  else {
    theaterChase(strip.Color(240, 55, 82), 200); // if other than those ranges, show pink
    delay(100); 
  }
}
